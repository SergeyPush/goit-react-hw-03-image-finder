{"version":3,"sources":["components/SearchForm.jsx","components/PhotoCard.jsx","components/Gallery.jsx","components/Modal.jsx","components/Error.jsx","services/pixabay.js","App.js","index.js"],"names":["SearchForm","state","searchQuery","onFormSubmit","e","preventDefault","setState","props","onSubmit","handleInputChange","target","value","this","className","type","autoComplete","placeholder","onChange","Component","PhotoCard","photo","onImageSelect","webformatURL","largeImageURL","likes","views","comments","downloads","src","alt","onClick","Gallery","photos","map","item","key","id","Modal","backdropRef","createRef","handleKeyDown","code","closeModal","handleButtonClose","handleBackdropClick","current","window","addEventListener","removeEventListener","image","ref","role","Error","message","style","textAlign","KEY","getImages","query","page","axios","get","params","q","image_type","orientation","per_page","rootLoader","document","querySelector","rootModal","App","isLoading","error","selectedImage","loadMore","onLoadMore","height","body","offsetHeight","then","response","data","hits","catch","finally","scrollTo","top","behavior","prevProps","prevState","createPortal","color","width","visible","length","disabled","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.17f2fe5e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport T from 'prop-types';\n\nclass SearchForm extends Component {\n  static propTypes = {\n    onSubmit: T.func.isRequired,\n  };\n\n  state = {\n    searchQuery: '',\n  };\n\n  onFormSubmit = e => {\n    e.preventDefault();\n    this.setState({\n      searchQuery: '',\n    });\n\n    this.props.onSubmit(this.state.searchQuery);\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      searchQuery: e.target.value,\n    });\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n    return (\n      <div>\n        <form className=\"search-form\" onSubmit={this.onFormSubmit}>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            placeholder=\"Search images...\"\n            value={searchQuery}\n            onChange={this.handleInputChange}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React from 'react';\nimport T from 'prop-types';\n\nconst PhotoCard = ({ photo, onImageSelect }) => {\n  const handleImageButton = image => {\n    onImageSelect(image);\n  };\n\n  const {\n    // id,\n    webformatURL,\n    largeImageURL,\n    likes,\n    views,\n    comments,\n    downloads,\n  } = photo;\n  return (\n    <div>\n      <div className=\"photo-card\">\n        <img src={webformatURL} alt=\"\" />\n\n        <div className=\"stats\">\n          <p className=\"stats-item\">\n            <i className=\"material-icons\">thumb_up</i>\n            {likes}\n          </p>\n          <p className=\"stats-item\">\n            <i className=\"material-icons\">visibility</i>\n            {views}\n          </p>\n          <p className=\"stats-item\">\n            <i className=\"material-icons\">comment</i>\n            {comments}\n          </p>\n          <p className=\"stats-item\">\n            <i className=\"material-icons\">cloud_download</i>\n            {downloads}\n          </p>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"fullscreen-button\"\n          onClick={() => handleImageButton(largeImageURL)}\n        >\n          <i className=\"material-icons\">zoom_out_map</i>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nPhotoCard.propTypes = {\n  photo: T.shape({\n    webformatURL: T.string.isRequired,\n    largeImageURL: T.string.isRequired,\n    likes: T.number.isRequired,\n    views: T.number.isRequired,\n    comments: T.number.isRequired,\n    downloads: T.number.isRequired,\n  }).isRequired,\n  onImageSelect: T.func.isRequired,\n};\n\nexport default PhotoCard;\n","import React from 'react';\nimport T from 'prop-types';\nimport PhotoCard from './PhotoCard';\n\nconst Gallery = ({ photos, onImageSelect }) => {\n  return (\n    <ul className=\"gallery\">\n      {photos.map(item => (\n        <PhotoCard key={item.id} photo={item} onImageSelect={onImageSelect} />\n      ))}\n    </ul>\n  );\n};\n\nGallery.propTypes = {\n  photos: T.arrayOf(T.object.isRequired).isRequired,\n  onImageSelect: T.func.isRequired,\n};\n\nexport default Gallery;\n","import React, { Component, createRef } from 'react';\nimport T from 'prop-types';\n\nclass Modal extends Component {\n  static propTypes = {\n    image: T.string.isRequired,\n    closeModal: T.func.isRequired,\n  };\n\n  backdropRef = createRef();\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code !== 'Escape') {\n      return;\n    }\n    this.props.closeModal();\n  };\n\n  handleButtonClose = () => {\n    this.props.closeModal();\n  };\n\n  handleBackdropClick = e => {\n    if (this.backdropRef.current && this.backdropRef.current !== e.target) {\n      return;\n    }\n    this.props.closeModal();\n  };\n\n  render() {\n    const { image } = this.props;\n    return (\n      <div>\n        <div\n          className=\"overlay\"\n          ref={this.backdropRef}\n          onClick={this.handleBackdropClick}\n          role=\"presentation\"\n        >\n          <div className=\"modal\">\n            <button\n              type=\"button\"\n              className=\"close-button\"\n              onClick={this.handleButtonClose}\n            >\n              <i className=\"material-icons\">close</i>\n            </button>\n            <img src={image} alt=\"Selected item\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React from 'react';\nimport T from 'prop-types';\n\nconst Error = ({ message }) => {\n  return <div style={{ textAlign: 'center' }}>{message}</div>;\n};\n\nError.propTypes = {\n  message: T.string.isRequired,\n};\n\nexport default Error;\n","import axios from 'axios';\n\nconst KEY = '12937632-34918ac446e6c937e0643541b';\nconst getImages = (query, page = 1) => {\n  return axios.get('https://pixabay.com/api/', {\n    params: {\n      key: KEY,\n      q: query,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      per_page: 12,\n      page,\n    },\n  });\n};\n\nexport default getImages;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport Loader from 'react-loader-spinner';\nimport SearchForm from './components/SearchForm';\nimport Gallery from './components/Gallery';\nimport Modal from './components/Modal';\nimport Error from './components/Error';\n\nimport getImages from './services/pixabay';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './styles/styles.css';\n\nconst rootLoader = document.querySelector('#root-loader');\nconst rootModal = document.querySelector('#root-modal');\n\nclass App extends Component {\n  state = {\n    photos: [],\n    isLoading: false,\n    page: 1,\n    searchQuery: '',\n    error: null,\n    selectedImage: null,\n    loadMore: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery } = this.state;\n    if (prevState.searchQuery !== searchQuery) {\n      this.onLoadMore();\n    }\n  }\n\n  onSubmit = query => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      photos: [],\n    });\n  };\n\n  onLoadMore = () => {\n    const height = document.body.offsetHeight;\n\n    const { searchQuery, page } = this.state;\n    this.setState({\n      isLoading: true,\n      loadMore: true,\n    });\n    getImages(searchQuery, page)\n      .then(response => {\n        this.setState(state => ({\n          photos: [...state.photos, ...response.data.hits],\n          page: state.page + 1,\n        }));\n      })\n      .catch(error => {\n        this.setState({\n          error,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n          loadMore: false,\n        });\n        window.scrollTo({\n          top: height,\n          behavior: 'smooth',\n        });\n      });\n  };\n\n  onImageSelect = id => {\n    this.setState({\n      selectedImage: id,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      selectedImage: null,\n    });\n  };\n\n  render() {\n    const {\n      photos,\n      isLoading,\n      selectedImage,\n      error,\n      searchQuery,\n      loadMore,\n    } = this.state;\n    return (\n      <div>\n        <SearchForm onSubmit={this.onSubmit} />\n        {error && <Error message={error} />}\n\n        {createPortal(\n          <Loader\n            type=\"ThreeDots\"\n            color=\"#414141\"\n            height={100}\n            width={100}\n            className=\"loader\"\n            visible={isLoading}\n          />,\n          rootLoader,\n        )}\n        {selectedImage &&\n          createPortal(\n            <Modal image={selectedImage} closeModal={this.closeModal} />,\n            rootModal,\n          )}\n\n        <Gallery photos={photos} onImageSelect={this.onImageSelect} />\n        {photos.length === 0 && searchQuery.length !== 0 && !isLoading && (\n          <Error message=\"Images not found\" />\n        )}\n        {photos.length > 0 && (\n          <button\n            type=\"button\"\n            onClick={this.onLoadMore}\n            className=\"button\"\n            disabled={loadMore}\n          >\n            Load more\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}